/*  From: MAREK@taunivm.tau.ac.il
    Date: 3 May 92   16:21 IST
    Split lines longer than 80 chars into two lines.
    The splitting point is chosen between words, approximately
    in the middle of the line */

arg fn ft fm '(' optstring

If fn='?' | fn ='' Then Signal Help

/* check for file */
if fm='' Then fm = 'A'
'STATE' fn ft fm
If rc^=0 Then Signal Nofile

input_file=fn ft fm
output_file=fn '$'||substr(ft,1,7) 'A'
If FEXIST(output_file) then 'ERASE' output_file

'EXECIO * DISKR' input_file /* read file into buffer */

Do Queued()
   Parse Pull line
   if length(line) < 81 Then Queue line
   Else Do
      n = Words(line)
      if n=1 Then Signal Noblanks /* no blanks to split at */
      n_comment= Index(line,'%')
      n_back=Index(line,'\%')
      If n_back <> 0 Then n_back = n_back +1

      Select;

         When n_comment = 0 | n_comment=n_back Then Do
         /* no % or \% */
            n1 = Trunc(n/2)
            line_a=Subword(line,1,n1)
            line_b=Subword(line,n1+1,n)
            Queue line_a
            Queue line_b
         End

         When n_comment = 1 & n_comment <> n_back Then Do
         /* line begins with a % */
            n1 = Trunc(n/2)
            line_a=Subword(line,1,n1)
            line_b='%' Subword(line,n1+1,n)
            Queue line_a
            Queue line_b
         End

         When n_comment > 1 & n_comment <> n_back Then Do
         /* % sign somewhere in line, but not a \% */
            line_a = Substr(line,1,n_comment-1)
            line_b = Substr(line,n_comment)
            If length(line_a) > 80 | length(line_b) > 80 Then Signal Nosplit
            Queue line_a
            Queue line_b
         End
         Otherwise NOP
      End /* select */

   End /* of line to be split */
End /* of lines */


n = Queued()
'EXECIO' n 'DISKW' output_file
'FINIS' output_file
'DROPBUF'

Exit Rc

Nofile:
Say fn ft fm 'does not exist'
Exit 28

Help:

Say
Say
Say 'REFORM will take an arbitrary file and split lines longer than 80'
Say 'characters into two lines. It will always split a line at a space,'
Say 'trying to find the splitting point approximately in the middle of'
Say 'the line.'
Say
Say 'If the line contains no blanks (as can sometimes happen'
Say 'in TeX files containing equations), REFORM will complain and stop,'
Say 'asking the user to first fix the culprit line by hand and then to'
Say 'run REFORM again.'
Say
Say 'If there is a comment sign - % - at the beginning of the line,'
Say 'the line will be split into two lines, each beginning with'
Say  ' a "%"'.
Say
Say 'If the comment sign is in the middle of the line, REFORM'
Say 'will try its best, but results may be unpredictable.'
Say
Say 'The output file will have the same filename as the original one,'
Say 'and the filetype will be the same as the original one, concatenated'
Say 'with a dollar sign, eg. PAPER TEX -> PAPER $TEX. The original file'
Say 'is left untouched.'
Say
Say
Exit Rc

Noblanks:
Say 'In the line:'
Say
Say line
Say
Say "there are no blank spaces, so I don't know"
Say 'where to split it. First fix this line by hand,'
Say 'then run REFORM again.'
'DROPBUF'
Exit

Nosplit:

Say
Say
Say 'The line:'
Say
Say line
Say
Say 'contains a comment sign - %, I am not sure where to split it.'
Say 'Fix it by hand, then run REFORM again.'
Say
'DROPBUF'
Exit
