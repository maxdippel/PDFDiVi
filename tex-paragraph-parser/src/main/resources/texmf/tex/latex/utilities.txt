This help file describes utilities and applications to install for use
with the archives, and where to find them for many platforms.

This information can be more easily accessed via the WorldWideWeb
at http://arXiv.org/help/ .

==========================================================================
Additional help is available by using the `get' command to retrieve the
following files:

help.txt:       summary of e-mail commands

prep.txt:       how to prepare your abstract and paper for submission

submit.txt:     instructions for submitting to the archive

eput.txt:       instructions for e-mail submissions,
                including appraisal of different packaging formats

fput.txt:       how to use anonymous ftp to put and replace papers

(this file):    utilities and applications to install for use
                with the archives, and where to find them for many platforms

sizes.txt:      how to slim down your PostScript files

==========================================================================

Requisite tools (tar, gzip, uuencode, ...)


One challenge for the e-print archives is to serve users sitting on a
wide range of computer platforms. One principle in the design of the archives
is therefore to ensure submissions are available in formats for which there
are utilities and applications on many platforms in the public domain,
while taking into account that the servers are Unix based and that the archive
designers, maintainers, and system administrators overwhelmingly prefer Unix
(for reasons too overwhelmingly obvious to enumerate).

Users of the archives, independent of what platform they choose, should
install a handful of utilities and applications so that they can take
maximal benefit from the archives. For platform-specific information and hints,
see the entry for your system. Archive users should install or have access
to the following (although not all are required):


1) TeX for their platform with a dvi previewer
2) A PostScript previewer
3) A PDF previewer
4) A utility for creating and extracting 'tar' archives
5) A utility for uncompressing LZW-compressed files (created by Unix compress)
6) A utility for uncompressing and creating gzipped files
7) A utility for uuencoding and uudecoding binary files
8) An ftp client
9) An up-to-date WorldWideWeb client
10) Email
11) JPEG, GIF, MPEG viewers
12) Tools for bimapping PostScript



TeX, PostScript, and PDF

All submissions to the archives should be available in one of these three
formats. We strongly advise authors to put TeX whenever they can. TeX can be
converted to (hyper-)PostScript, and (hyper-)PostScript can be converted to
PDF. PDF can be converted into PostScript as well. The archives will make
PostScript versions of all (properly submitted, i.e. TeX-able) submissions
available in the very near future through auto-tex'ing, and in the future PDF
will be available. Users with TeX, a good dvi previewer, and a PostScript
previewer are currently in the best position for living better through the
archives.


tar, compress, gzip, and uuencode

Many submissions have multiple files. It is important to use a format that
doesn't require users to edit and cut apart files by hand. The Unix utility
'tar' (for Tape ARchive) is a good way to package up multiple files into a
single package, and that is what we use. It is available for all platforms.
'tar' files have a .tar extension. In order to save network bandwidth and disk
space, submissions are compressed. Unix compress has been used for past
submissions, but the archive has now moved over to GNU's gzip which typically 
gives better compression. Therefore, you should get and install gzip, and start
using it for all your compression. The gzip decompression utility can
uncompress both Unix compressed files and gzipped files, so one only needs to
have gzip available. Unix compressed files have a .Z extension and gzipped
files have a .gz extension.

Mailing a compressed file through e-mail will corrupt it. The solution is to
specially encode it using 'uuencoding' which produces a file with only
printable ASCII characters and uniform line lengths. A uuencoded file has as
its first line something like:

begin 644 foo.tar.gz

followed by lines of equal length starting with the letter M. At the end is a
line shorter than the other lines, followed by a line containing only a
backquote or a space, followed by a line containing only the word 'end'.

The 'begin' line contains two pieces of information. The first is a number
that is either 0, or a 3 or 4 digit number. The second is the name of the file
that will be produced when the uudecoding is performed. The number tells the
operating system that supports read/write/execute permissions what permissions
to give the newly created file. A '0' means use the user's default permissions,
or sometimes allows no permissions at all. Submitters should note the
permissions (and edit to 644 if not already) before mailing.
Also, the filename should be submitted with the standard Unix extensions
(see below). On other systems, users should be careful to edit the begin line
before uudecoding to give a valid filename on their system. Most versions of
'uudecode' will ignore anything in the file before the begin line. However,
some people insist on putting instructions that include a duplicate begin line
at the beginning of a uuencoded file on how to decode it. The result is that
file is decoded incorrectly and corrupted. (So don't do this.)

One problem with some old implementations of uuencode is that they use a
space as one of the ASCII encoding characters. Unfortunately, some mailers
strip off trailing spaces and so a uuencoded file can be corrupted in this
way (most frequently it is the line just before the end which is the problem,
although other lines might end in a space). Newer versions get around this by
using a backquote (`) instead of a space (octal \140 instead of \040, and
uudecode only looks at the last six bits which remain the same).  If your
version of uuencode uses spaces (just check the line before the end), you
should be aware of this potential problem if your submission seems to have
been corrupted. The best solution if you encounter problems is to install a
newer version of uuencode (e.g. available in the latest version of
sharutils from one of the <a
href="http://www.gnu.ai.mit.edu/order/ftp.html">GNU mirror sites, or from <A
HREF="ftp://prep.ai.mit.edu/pub/gnu/">ftp://prep.ai.mit.edu/pub/gnu/).

If that is not possible then globally replace the spaces in your file (after
the begin nnn filename line) with backquotes using an editor or
Unix command line utility like `sed', 

Some mailers are set up to package binary files for mailing in a format
called MIME. While this is convenient for sending mail to other uses with MIME
capable mail readers, our archive software currently does not unpack it,
so avoid MIME. A similar statement applies to NeXT's Mail.app program
which can send both MIME and NeXTMail.


Email, ftp, and World Wide Web

Email is the lowest common denominator for accessing the archives.
Email is currently required for subscribing to the daily abstract distribution 
lists and submitting papers. If you don't have e-mail, you can still access
the archive via anonymous ftp (ftp://arXiv.org/)
or via the World Wide Web (http://arXiv.org/).
(The latter is overwhelmingly preferred.)

Anonymous ftp gives users access to the entire archive. It isn't very
convenient for navigating around though, and you can't do searches. It can,
however, be useful if you know exactly what you want to get. 'ftp' also can be
used for placing files on the archives for submission (it is used in
conjunction with the e-mail fput/freplace commands).

By far the best way to access the archives is via the World Wide Web,
although this can be difficult over slow network connections.  Everything is
accessible via WWW. A properly configured Web browser can make downloading and
displaying of submissions completely automatic. The archive at
http://arXiv.org/ is the main archive for users in the USA
(users in other countries can check the list of mirror sites).

JPEG, GIF, and MPEG

JPEG's and GIF's are formats for encoding photographic information.
MPEG is a video format. Not very many papers have included these formats
in the past, but in the future these may become important.
Users should at least be aware of this possibility. GIF and JPEG
might be a suitable replacement for large (> 300kB) color PostScript.


Filename extensions

To avoid unnecessary confusion, you are strongly urged to use the
standard file name extensions when submitting your files. For uuencoded
files that you send, these extensions are mandatory so that the server can
handle certain file types correctly (for instance a uuencoded compress
PostScript files is automatically unpacked on the server which looks for the
ps.Z extension). Here are the conventions you should use:

                 .Z        = Standard Unix compress
                 .gz       = GNU's gzip compression
                 .tar.Z    = Compressed tar archive
                 .taz      = Acceptable PC alternative to .tar.Z
                 .tar.gz   = gzipped tar archive
                 .tgz      = Acceptable PC alternative to .tar.gz
                 .tex      = TeX
                 .sty      = LaTeX style files
                 .cls      = LaTeX2e class files
                 .dvi      = DVI file
                 .ps       = PostScript
                 .ps.Z     = Compressed PostScript
                 .ps.gz    = gzipped PostScript
                 .psz      = Acceptable PS alternative to .ps.gz
                 .pdf      = PDF portable document format
                 .eps      = Encapuslated PostScript
                 .uu       = Uuencoded files
                 .gif      = GIF graphics
                 .jpg      = JPEG graphics
                 .mpg      = MPEG animations
                 .hqx      = Macintosh bin-hexed files (not recommended)
                 .bbl      = latex bibliographic files
                 .txt,.asc = plain ASCII text
      
Users should be sure to use these conventions when naming files
(e.g., VMS extensions like .tar_Z should not be used).

The following is a list of utilities and applications and where to
find them for different places via anonymous ftp. The locations are
given in the URL format: ftp://machine.somewhere/somedir/afile.
This means that you ftp to machine.somewhere, login in as "anonymous",
give your e-mail address as the password, cd to somedir, and get afile.
http URL's are also given if appropriate. Additions/corrections welcomed.
Send a comment to an archive or e-mail to www-admin@arXiv.org .


TeX

General TeX stuff, including full distributions for many platforms and
public domain postscript versions of TeX fonts, can be found at
numerous sites. The CTAN servers are the most comprehensive and can be
found in the file CTANservers.txt. The main ones are:

ftp://ftp.cdrom.com/pub/tex/ or http://www.cdrom.com/pub/tex/ (USA)
ftp://ftp.dante.de (Germany)
ftp://ftp.tex.ac.uk or http://www.tex.ac.uk/ (England)  

ftp://labrea.stanford.edu/ has additional software, included MetaFont.

AMSTeX, AMSLaTeX, and AMS fonts can be found at

ftp://e-math.ams.org/ .

Revtex and other APS related stuff can be found at

ftp://aps.org/ or http://aps.org/ .

See http://arXiv.org/hypertex/ for HyperTeX utilities and Hyperdvi 
previewers.


PostScript

The public domain PostScript interpreter is GhostScript. Coupled with
GhostView, this allows one to view PostScript on X-windows, PC's, and Mac's.
The main archive site for both of these is ftp://ftp.cs.wisc.edu/ .
The Mac version is a bit primitive --- it only allows for paging forward
through a postscript file. Many more features are promised though.
Ghostscript is also a good way to bitmap PostScript.


PDF

The latest version of GhostScript (might still be only for beta-testers)
will interpret PDF and allow you to view it using GhostView.
Fully functional PDF readers are available from Adobe at ftp://ftp.adobe.com/
or at http://www.adobe.com/for PC's, Mac's, Sun's and HP's.
Distillers for creating PDF are commercial and are also available from Adobe.
There are several PDF viewers for NeXTSTEP which can be found at
ftp://ftp.cs.orst.edu/ or at 
http://peanuts.leo.org/peanuts/index-e.html.


Tar, compress, gzip/gunzip, and uuencode/uudecode

You can obtain excellent versions of tar, gzip (a drop-in
replacement for compress) and uuencode from the GNU Project. The source 
code is freely redistributable and supports a very wide range of platforms.

Listed below are some likely places to peruse.
The Usenet newsgroup alt.comp.compression FAQ has quite a bit more
(except about uuencode/uudecode). The relevant excerpt is available as
ftp://arXiv.org/macros/compression.txt or as
http://arXiv.org/ftp/macros/compression.txt

See also our uufiles FAQ at this http url.

  Unix:

    Unix comes with everything but gzip (although some like GNU/Linux, or
    NeXTSTEP 3.2/3.3 come with that as well). For more information on how
    to get gzip, see the GNU web page on How to get GNU 
    Software at http://www.gnu.ai.mit.edu/software/software.html.
    A csh script called uufiles is available
    as a macro from ftp://arXiv.org/software/unix/ that
    will help users package up files into uuencoded, compressed, tar files.

  VMS:

    A version of all of these can be found at
    ftp://arXiv.org/software/vmstools , as well as utilities called
    pack.com and unpack.com that makes it easier to use them. Both VAX and
    Alpha versions are available.

  Mac:

    Versions of all of these utilities can be found at
    ftp://wuarchive.wustl.edu/systems/mac/info-mac/_Compress_&_Translate/.
   There is now a Mac version of uufiles available at
   ftp://arXiv.org/software/mac-tools/. You will also need
   the latest version of TCL for the Mac to use this.


  PC:

    gzip:
      
      ftp://prep.ai.mit.edu/pub/gnu/gzip-msdos-1.2.4.exe
                                                 (MSDOS, lha self-extract)
      ftp://garbo.uwasa.fi/pc/unix/gzip124.zip   (MSDOS exe)
      
    tar:
      
      ftp://oak.oakland.edu/pub/msdos/starter/tarread.exe
      ftp://garbo.uwasa.fi/pc/unix/tar4dos.zoo
      
    .Z: 
      
      Use gzip.
      
    uuencode/uudecode:
      
      C source can be found found at ftp://arXiv.org/software/unix/
      
      
